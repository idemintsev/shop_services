# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import warehouse_service.warehouse_manager_pb2 as warehouse__manager__pb2


class WarehouseManagerServiceStub(object):
    """Warehouse manager service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateWarehouse = channel.unary_unary(
                '/warehouse.v1.WarehouseManagerService/CreateWarehouse',
                request_serializer=warehouse__manager__pb2.CreateRequest.SerializeToString,
                response_deserializer=warehouse__manager__pb2.Response.FromString,
                )
        self.DeleteWarehouse = channel.unary_unary(
                '/warehouse.v1.WarehouseManagerService/DeleteWarehouse',
                request_serializer=warehouse__manager__pb2.DeleteRequest.SerializeToString,
                response_deserializer=warehouse__manager__pb2.Response.FromString,
                )
        self.ExistingWarehouses = channel.unary_unary(
                '/warehouse.v1.WarehouseManagerService/ExistingWarehouses',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=warehouse__manager__pb2.InfoResponse.FromString,
                )


class WarehouseManagerServiceServicer(object):
    """Warehouse manager service
    """

    def CreateWarehouse(self, request, context):
        """Create a warehouse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWarehouse(self, request, context):
        """Delete a warehouse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExistingWarehouses(self, request, context):
        """Get list of existing warehouses
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WarehouseManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateWarehouse': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWarehouse,
                    request_deserializer=warehouse__manager__pb2.CreateRequest.FromString,
                    response_serializer=warehouse__manager__pb2.Response.SerializeToString,
            ),
            'DeleteWarehouse': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWarehouse,
                    request_deserializer=warehouse__manager__pb2.DeleteRequest.FromString,
                    response_serializer=warehouse__manager__pb2.Response.SerializeToString,
            ),
            'ExistingWarehouses': grpc.unary_unary_rpc_method_handler(
                    servicer.ExistingWarehouses,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=warehouse__manager__pb2.InfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'warehouse.v1.WarehouseManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WarehouseManagerService(object):
    """Warehouse manager service
    """

    @staticmethod
    def CreateWarehouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/warehouse.v1.WarehouseManagerService/CreateWarehouse',
            warehouse__manager__pb2.CreateRequest.SerializeToString,
            warehouse__manager__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteWarehouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/warehouse.v1.WarehouseManagerService/DeleteWarehouse',
            warehouse__manager__pb2.DeleteRequest.SerializeToString,
            warehouse__manager__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExistingWarehouses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/warehouse.v1.WarehouseManagerService/ExistingWarehouses',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            warehouse__manager__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
