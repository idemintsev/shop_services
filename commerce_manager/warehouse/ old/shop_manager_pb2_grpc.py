# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import warehouse_service.common_pb2 as common__pb2
import warehouse_service.shop_manager_pb2 as shop__manager__pb2


class ShopManagerServiceStub(object):
    """Shop manager service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BuyGood = channel.unary_unary(
                '/shop.v1.ShopManagerService/BuyGood',
                request_serializer=shop__manager__pb2.BuyingRequest.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )
        self.ReturnGood = channel.unary_unary(
                '/shop.v1.ShopManagerService/ReturnGood',
                request_serializer=shop__manager__pb2.ReturnRequest.SerializeToString,
                response_deserializer=common__pb2.Response.FromString,
                )


class ShopManagerServiceServicer(object):
    """Shop manager service
    """

    def BuyGood(self, request, context):
        """Buy a new good
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReturnGood(self, request, context):
        """Return a good
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ShopManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BuyGood': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyGood,
                    request_deserializer=shop__manager__pb2.BuyingRequest.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
            'ReturnGood': grpc.unary_unary_rpc_method_handler(
                    servicer.ReturnGood,
                    request_deserializer=shop__manager__pb2.ReturnRequest.FromString,
                    response_serializer=common__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shop.v1.ShopManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ShopManagerService(object):
    """Shop manager service
    """

    @staticmethod
    def BuyGood(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shop.v1.ShopManagerService/BuyGood',
            shop__manager__pb2.BuyingRequest.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReturnGood(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shop.v1.ShopManagerService/ReturnGood',
            shop__manager__pb2.ReturnRequest.SerializeToString,
            common__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
